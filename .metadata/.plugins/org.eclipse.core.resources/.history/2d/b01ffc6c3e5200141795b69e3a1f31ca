package seankelly.androidmap3;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import android.support.v7.app.ActionBarActivity;
import android.net.Uri;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;

public class MainActivity extends ActionBarActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	public void searchAddress(View v) {
		/*
		 * EditText input = (EditText) findViewById(R.id.enterAddress); String
		 * address = input.getText().toString(); String [] addressChunks =
		 * address.split("[ ,]+"); Uri.Builder builder = new Uri.Builder();
		 * 
		 * https://maps.googleapis.com/maps/api/geocode/json?address=1600+
		 * Amphitheatre+Parkway,+Mountain+View,+CA&key=API_KEY
		 * 
		 * https://www.myawesomesite.com/turtles/types?type=1&sort=relevance#section
		 * -name
		 * builder.scheme("https").authority("www.myawesomesite.com").appendPath
		 * ("turtles").appendPath("types").appendQueryParameter("type",
		 * "1").appendQueryParameter("sort",
		 * "relevance").fragment("section-name");
		 * builder.scheme("https").authority
		 * ("maps.googleapis.com/maps/api/geocode/json"
		 * ).appendQueryParameter("address", "1").appendQueryParameter("sort",
		 * "relevance").fragment("section-name");
		 * 
		 * String myUrl = builder.build().toString();
		 */

		EditText input = (EditText) findViewById(R.id.enterAddress);
		String address = input.getText().toString();
		String[] addressChunks = address.split("[ ]+");
		String addressQuery = "https://maps.googleapis.com/maps/api/geocode/json?";

		if (addressChunks.length > 0) {
			addressQuery += addressChunks[0];
		}
		
		for (int i = 1; i < addressChunks.length; i++) {
			addressQuery += "+";
			addressQuery += addressChunks[i];
		}
		
		addressQuery += "&key=AIzaSyDa5bOs7vXkU8Pkg_mqA0I8bizJVTY6ISs";

		String result = "";
		
		try {
			((EditText) findViewById(R.id.enterAddress)).setText("generated URL: " + addressQuery);
			
			URL url = new URL(addressQuery);
			
			((EditText) findViewById(R.id.enterAddress)).setText("made URL");
			
			HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
			
			
			((EditText) findViewById(R.id.enterAddress)).setText("opened Http connection");
			
			urlConnection.getInputStream();
			urlConnection.disconnect();
			
			/*
			InputStream in = new BufferedInputStream(urlConnection.getInputStream());
			
			((EditText) findViewById(R.id.enterAddress)).setText("made input stream");
			
			result = readStream(in);
			
			((EditText) findViewById(R.id.enterAddress)).setText("readStream finished");
			
			*/
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally
		{
			
		}
		
		
		//((EditText) findViewById(R.id.enterAddress)).setText(result); //debug purposes
		
		/*
		 *    URL url = new URL("http://www.android.com/");
   HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
   try {
     InputStream in = new BufferedInputStream(urlConnection.getInputStream());
     readStream(in);
    finally {
     urlConnection.disconnect();
   }
 }
		 * 
		 */

	}

	public void clearPrompt(View v) {
		EditText input = (EditText) findViewById(R.id.enterAddress);
		if (input.getText().toString().equals("Enter an Address")) {
			input.setText("");
		}
	}
	
	private String readStream(InputStream is) throws IOException
	{
		StringBuilder ans = new StringBuilder();
		BufferedReader br = new BufferedReader(new InputStreamReader(is));
		//^^^ provide a size of the buffer????
		
		for(String currentLine = br.readLine(); currentLine != null; currentLine = br.readLine())
		{
			ans.append(currentLine);
		}
		
		is.close();
		
		return ans.toString();
	}
}
